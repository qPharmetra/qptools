% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nm_params_table.r
\name{nm_params_table.character}
\alias{nm_params_table.character}
\title{Get Parameter Table for Character}
\usage{
\method{nm_params_table}{character}(
  x,
  directory = getOption("nmDir", getwd()),
  extension = c(getOption("nmFileExt", "ext"), getOption("nmFileLst", "lst")),
  quiet = TRUE,
  clean = TRUE,
  nested = c(TRUE, FALSE),
  clue = "ITERATION",
  keep_stat = "SD",
  keep_type = "ETA",
  ci.sep = " - ",
  fields = getOption("fields", c("symbol", "unit", "transform", "label")),
  digits = 3,
  ...
)
}
\arguments{
\item{x}{character: a file path, or the name of a run in 'directory', or ext content}

\item{directory}{character: optional location of x}

\item{extension}{length-two character: extensions identifying ext and lst files}

\item{quiet}{logical: flag for displaying intermediate output}

\item{clean}{should the unzipped file be removed when done (defaults to TRUE)}

\item{nested}{length-two logical: are ext and lst files nested within the run directory?}

\item{clue}{a text fragment expected to occur in cov files}

\item{keep_stat}{a text fragment indicating whether to take shrinkage variance ('VR') of standard deviation ('SD', default).}

\item{keep_type}{a text fragment indicating whether to take shrinkage 'EBV' or 'ETA' (default)}

\item{ci.sep}{character: character to separate confidence intervals by}

\item{fields}{character: names of semicolon-delimited fields to expect in control streams}

\item{digits}{numeric: number of significant digits to display in 95 percent confidence interval (returned as text); use \code{format(digits=)} to control significance of other variables}

\item{...}{passed to \code{\link{read_ext.character}}}
}
\value{
data.frame with class 'nmpartab'
}
\description{
Gets a parameter table for a finished run. Uses EXT file.
See also \code{\link{get_est_table}} which uses \pkg{pmxTools}
to construct a parameter table from the XML.
See also \code{\link[nonmemica]{partab}} which does similar.
}
\examples{
library(magrittr)
library(dplyr)
options(nmDir = getOption("qpExampleDir"))
"example1" \%>\% nm_params_table
"run103" \%>\% nm_params_table
"run103" \%>\% nm_params_table_short
"run103" \%>\% nm_params_table \%>\% lol
"run103" \%>\% nm_params_table \%>\% 
   lol \%>\% 
   format(
      paste_label_unit='label', 
      latex=TRUE
   ) \%>\% 
   knitr::kable(
     format="latex",
     escape=FALSE, 
     booktabs=TRUE
   ) 

# merge bootstrap results in
boot_dir = getOption("nmDir") \%>\% file.path(., "bootstrap")
param105 = "run105" \%>\% nm_params_table() \%>\% lol
fn_boot = "raw_results_run105bs.csv"
bootstrap = read_bootstrap(boot_dir, filename = fn_boot)
theBoots = bootstrap \%>\% tabulate_bootstrap()
param105 \%<>\% left_join(theBoots \%>\% filter(parameter !="ofv") \%>\% select(parameter,b_central,b_CI))
param105 \%>\% select(parameter,estimate, se_est, CI95, shrinksd, b_central,b_CI)
}
\seealso{
Other ext: 
\code{\link{as.list.ext}()},
\code{\link{as.matrix.ext}()},
\code{\link{find_diag}()},
\code{\link{format.nmpartab}()},
\code{\link{format.nmpartab_}()},
\code{\link{get_ext}()},
\code{\link{get_ext.character}()},
\code{\link{get_ext.ext}()},
\code{\link{get_ext.extList}()},
\code{\link{get_ofv.ext}()},
\code{\link{get_ofv.nonmem}()},
\code{\link{lol}()},
\code{\link{nm_condition_number}()},
\code{\link{nm_condition_number.default}()},
\code{\link{nm_condition_number.ext}()},
\code{\link{nm_params_table}()},
\code{\link{nm_params_table_short}()},
\code{\link{nm_params_table_short.character}()},
\code{\link{nm_params_table_short.ext}()},
\code{\link{nm_params_table_short.nmpartab}()},
\code{\link{read_ext}()},
\code{\link{read_ext.character}()},
\code{\link{read_ext.ext}()},
\code{\link{summary.extList}()}
}
\concept{ext}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nm_params_table.r
\name{format.nmpartab}
\alias{format.nmpartab}
\title{Format Parameter Table}
\usage{
\method{format}{nmpartab}(
  x,
  align.dot = TRUE,
  latex = FALSE,
  digits = 3,
  fixed.text = "(fixed)",
  paste_label_unit = "none",
  pretty = TRUE,
  ...
)
}
\arguments{
\item{x}{character, e.g. a run name like 'run01'}

\item{align.dot}{logical: align dots around decimal point, defaults to TRUE, but only effective when latex=TRUE}

\item{latex}{logical: creates escaped \LaTeX output and effectuates align.dot argument. Defaults to FALSE.}

\item{digits}{numeric: number of significant digits assed to (formatted_)signif. Defaults to 3.}

\item{fixed.text}{character: string used as suffix after a fixed parameter estimate.}

\item{paste_label_unit}{logical: glue label and bracketed unit together. Defaults to FALSE.}

\item{pretty}{provide the key names after formatting only (TRUE, default) or keep the untransformed}

\item{...}{arguments passed on to \code{\link{format.nmpartab_}}}
}
\value{
data.frame of class 'nmpartab'
}
\description{
Formats list of parameter tables for inclusion in reports, typically in \LaTeX or Rmarkdown 
or bookdown format. 
It takes output of class 'nmpartab' which \code{\link{nm_params_table}} and 
\code{\link{nm_params_table_short}} provide. 
Alternative methods for parameter tables: see also \code{\link{get_est_table}} 
which uses \pkg{pmxTools} to construct a parameter table from the XML. 
See also \code{\link[nonmemica]{partab}} from \pkg{nonmemica} which does similar.
Formatting functions \code{\link{formatted_signif}} that calls 
\code{\link{align_around_decimal_point}}.
}
\examples{
library(magrittr)
library(dplyr)
library(knitr)
library(yamlet)
library(nonmemica)
options(nmDir = getOption("qpExampleDir"))
"run103" \%>\% nm_params_table \%>\% format
"run103" \%>\% nm_params_table \%>\% lol \%>\% format
"run103" \%>\% nm_params_table \%>\% format \%>\% lol # same
"run103" \%>\% nm_params_table \%>\% format(paste_label_unit= 'label')
"run103" \%>\% nm_params_table \%>\% format(paste_label_unit= 'label') \%>\% lol
"run103" \%>\% nm_params_table \%>\% format(paste_label_unit= 'label', pretty = FALSE) \%>\% lol
lapply(
  setNames(
    nm=paste0("run",100:103)), 
    function(x){
      x \%>\% 
      nm_params_table \%>\% 
      format(paste_label_unit= 'label') \%>\% 
      lol
    } 
   )

tab <- "run103" \%>\% nm_params_table \%>\% lol 
tab \%<>\% format(paste_label_unit='label')

# 'Name' is class 'nms_nonmem'
# and has a guide with spork assignments
tab \%>\% decorations(Name)

# yamlet::scripted() makes it a factor 
# and renders its levels as html or latex
# In a pdf context, this creates ready-to-use 
# tex markup that you will not want to escape.
# Make sure your other table cell content is
# already escaped as necessary.
was <- knitr::opts_knit$set(out.format = 'latex') \%$\% out.format
tab \%<>\% scripted
tab \%$\% Name \%>\% levels


tab \%>\% kable(
  format = 'latex', 
  escape = FALSE, 
  booktabs = TRUE
)

# cleanup
knitr::opts_knit$set(out.format = was)

# Alternatively, use shorter latex syntax.
"run103" \%>\% 
  nm_params_table \%>\% 
  lol \%>\%
  format \%>\%
  to_latex
  
# If you haven't formatted the table, to_latex() modifies
# 'parameter' instead of 'Name'
"run103" \%>\% 
  nm_params_table \%>\% 
  lol \%>\%
  to_latex


  
# You can also work with vectors
c('THETA1', 'OMEGA(2,3)') \%>\% as_nms_nonmem \%>\% to_latex
qptools:::to_latex.nms_nonmem(c('THETA1', 'OMEGA(2,3)'))
}
\seealso{
Other ext: 
\code{\link{as.list.ext}()},
\code{\link{as.matrix.ext}()},
\code{\link{find_diag}()},
\code{\link{format.nmpartab_}()},
\code{\link{get_ext}()},
\code{\link{get_ext.character}()},
\code{\link{get_ext.ext}()},
\code{\link{get_ext.extList}()},
\code{\link{get_ofv.ext}()},
\code{\link{get_ofv.nonmem}()},
\code{\link{lol}()},
\code{\link{nm_condition_number}()},
\code{\link{nm_condition_number.default}()},
\code{\link{nm_condition_number.ext}()},
\code{\link{nm_params_table}()},
\code{\link{nm_params_table.character}()},
\code{\link{nm_params_table_short}()},
\code{\link{nm_params_table_short.character}()},
\code{\link{nm_params_table_short.ext}()},
\code{\link{nm_params_table_short.nmpartab}()},
\code{\link{read_ext}()},
\code{\link{read_ext.character}()},
\code{\link{read_ext.ext}()},
\code{\link{summary.extList}()}
}
\concept{ext}
